/**
 * EventInfo<any> is the generic return type for every handler in this package. It contains the pieces of information common to every {@link https://www.xmind.net/m/DzfVvf | type of event}.
 * @typeParam Input - one of {@link PointerInput}, {@link DeviceInput}, {@link DragCoordinates}, {@link GamepadInput}, {@link KeyboardInput}, {@link WindowInput}, {@linkScrollInput}
 */

export declare type EventInfo<Input> = {
  type: Event['type'];
  timestamp: Event['timeStamp'];
  input: Input;
};

/**
 * mergeWithEventInfo gets all of the event-type-specific data that is generated by a handler, and merges into an {@link EventInfo} object. Use this inside every handler in this library.
 *
 * @param event - the event for which you want to make an EventInfo object
 *
 * @returns {@link EventInfo}
 *
 */
export function mergeWithEventInfo<Input>(e: Event, Returns: Input) {
  return {
    type: e.type,
    timestamp: e.timeStamp,
    input: Returns,
  };
}
