{
  "clips": [
    {
      "children": [
        {
          "content": "/**\n * ${1:What is the class's single responsibility?} \n *\n ${2:* @remarks}\n * ${2:When should you use the class? What performance benefits or other magical powers does it confer upon you?}\n * ${2:When shouldn't you use the class?}\n * ${2:What states does this class furnish?}\n * ${2:What behaviors does this class furnish?}\n * ${2:Can you inject dependencies into this class?}\n * ${2:Are there any situations where it makes sense to extend this class, rather than inject dependencies into it?}\n * ${2:How does the code in this class work?}\n * \n ${3:* @example}\n ${3:* ```typescript}\n ${3:*\t// example of how to use this class here}\n ${3:* ```}\n *\n * ${10:@alpha} ${11:@beta} ${12:@eventProperty} ${13:@experimental} ${14:@internal} ${15:@override} ${16:@packageDocumentation} ${17:@public} ${18:@readonly} ${19:@sealed} ${20:@virtual}\n */\nclass ${0:ClassName} {\n\n\t // !Static Methods\n\t \n\t // !Private (and/or readonly) Properties\n\t \n\t // !Constructor function\n\tconstructor(){}\n\t\n\t// !Getters and Setters\n\t\n\t// !Public Accessor Methods\n\t\n\t// !Public Instance Methods\n\t\n\t// !Private Subroutines\n\t\n}",
          "name": "Typescript Class",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "typescript class"
        }
      ],
      "name": "Typescript"
    },
    {
      "children": [
        {
          "content": "/**\n * ${1:What is the class's single responsibility?} \n *\n ${2:* @remarks}\n * ${2:When should you use the class? What performance benefits or other magical powers does it confer upon you?}\n * ${2:When shouldn't you use the class?}\n * ${2:What states does this class furnish?}\n * ${2:What behaviors does this class furnish?}\n * ${2:Can you inject dependencies into this class?}\n * ${2:Are there any situations where it makes sense to extend this class, rather than inject dependencies into it?}\n * ${2:How does the code in this class work?}\n * \n ${3:* @example}\n ${3:* ```typescript}\n ${3:*\t// example of how to use this class here}\n ${3:* ```}\n *\n * ${10:@alpha} ${11:@beta} ${12:@eventProperty} ${13:@experimental} ${14:@internal} ${15:@override} ${16:@packageDocumentation} ${17:@public} ${18:@readonly} ${19:@sealed} ${20:@virtual}\n */\n",
          "name": "TSdoc Class Section",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "class"
        },
        {
          "content": "/**\n * ${0:What does this method or function do?} \n *\n ${1:* @param }${1:name} - ${1:description}\n *\n ${2:* @returns} ${2:type and meaning of return value}\n *\n * ${10:@alpha} ${11:@beta} ${12:@eventProperty} ${13:@experimental} ${14:@internal} ${15:@override} ${16:@packageDocumentation} ${17:@public} ${18:@readonly} ${19:@sealed} ${20:@virtual}\n */",
          "name": "TSdoc Method Section",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "method"
        },
        {
          "content": "/**\n * ${0:Summary}\n *\n * ${1:Block Tags}\n *\n * ${10:@alpha} ${11:@beta} ${12:@eventProperty} ${13:@experimental} ${14:@internal} ${15:@override} ${16:@packageDocumentation} ${17:@public} ${18:@readonly} ${19:@sealed} ${20:@virtual}\n */",
          "name": "TSdoc Variable Section",
          "trigger": "const"
        }
      ],
      "name": "TSdoc Sections"
    },
    {
      "children": [
        {
          "content": "\n* @decorator `${:decorator expression}`\n* ",
          "name": "TSdoc Decorator Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "decorator"
        },
        {
          "content": "\n* @deprecated Use {@link ${:API item}} instead.\n*\n",
          "name": "TSdoc Deprecated Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "deprecated"
        },
        {
          "content": "\n* @defaultValue `${:the default value}`\n*",
          "name": "TSdoc Default Value Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "defaultValue"
        },
        {
          "content": "\n* @example\n* ```typescript\n*\n*\t${:// place your example code here}\n*\n* ```\n*",
          "name": "TSdoc Example Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "example"
        },
        {
          "content": "{@inheritDoc ${:section}}",
          "name": "TSdoc Inherit Doc Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "inheritDoc"
        },
        {
          "content": "{@label ${:LABEL}}",
          "name": "TSdoc Label Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "label"
        },
        {
          "content": "{@link ${0:API Item or URL} | ${1:Description Text}}",
          "name": "TSdoc Link Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "link"
        },
        {
          "content": "\n* @param ${0:parameterName} - ${1:Describe what the parameter affects, and what it defaults to.}\n*",
          "name": "TSdoc Param Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "param"
        },
        {
          "content": "\n* @privateRemarks\n* ${:Documentation that you want to omit from any auto-generated documentation site.}\n*",
          "name": "TSdoc Private Remarks Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "privateRemarks"
        },
        {
          "content": "\n* @remarks\n* ${:Any explanation of implementation details, reasoning or other long-form contextual information.}\n*",
          "name": "TSdoc Remarks Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "remarks"
        },
        {
          "content": "\n* @returns ${0:Description of values you can expect from this function.}\n*",
          "name": "TSdoc Returns Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "returns"
        },
        {
          "content": "\n* @see {@link ${0:URL} | ${1:Description}} \n*",
          "name": "TSdoc See Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "see"
        },
        {
          "content": "\n* @throws {@link ${:errorName}}\n* ${:Explain why this error is thrown.}\n*",
          "name": "TSdoc Throws Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "throws"
        },
        {
          "content": "\n* @typeParam ${1:name of type parameter} - ${:List of types the the type parameter should take}\n*",
          "name": "TSdoc Type Parameter Tag",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "typeParam"
        },
        {
          "content": "${10:@alpha} ${11:@beta} ${12:@eventProperty} ${13:@experimental} ${14:@internal} ${15:@override} ${16:@packageDocumentation} ${17:@public} ${18:@readonly} ${19:@sealed} ${20:@virtual}",
          "name": "TSdoc Modifier Tags",
          "scope": "editor",
          "syntax": "typescript",
          "trigger": "mod"
        }
      ],
      "name": "TSdoc Tags"
    }
  ]
}
